<?xml version="1.0" encoding="utf-8"?>
<chapter xml:id="ch-func">
	<title>関数</title>
	<introduction>
		<p>本章では、集合間の対応関係である関数の概念を示した上で、関数の具体例やその性質について述べる。</p>
		<p><xref ref="sec-func-map"/>節では、集合の対応関係として関数を定義する。
		<xref ref="sec-func-graph"/>節では、関数を可視化する方法としてのグラフについて述べる。
		<xref ref="sec-func-poly"/>節では、多項式関数の性質について述べる。</p>
	</introduction>

	<section xml:id="sec-func-map">
		<title>写像と関数</title>
		<p>2つの集合の要素に対応関係が付いているとき、この対応関係を写像や関数と呼ぶ。</p>
		<definition>
			<title>写像と関数</title>
			<statement>
				<m>A, B</m>を集合とする。<m>f</m>が<m>A</m>の要素に<m>B</m>の要素を一つだけ対応させるとき、<m>f</m>を<m>A</m>から<m>B</m>への<dfn en="map">写像</dfn>または<dfn en="function">関数</dfn>といい、<m>f:A \to B</m>と表す。
				このとき、<m>A</m>を<m>f</m>の<dfn en="domain">定義域</dfn>、<m>B</m>を<m>f</m>の<dfn en="range">値域</dfn>という。
				また、写像<m>f</m>が<m>a (\in A)</m>に<m>b (\in B)</m>を対応させるとき、これを<m>f: a \mapsto b</m>または<m>f(a) = b</m>と表す。
				このとき、<m>b</m>を<dfn en="input">入力</dfn><m>a</m>に対する<m>f</m>の<dfn en="output">出力</dfn>または<dfn en="value">値</dfn>という。
			</statement>
		</definition>
		<p>「写像」と「関数」という用語は、分野によっては使い分けることもあるが、同じだと考えても特に問題ない。また、写像を「変換」や「対応」などと呼ぶこともある。
		「写像」は英語でmapまたはmappingであるが、「現実世界の地形」を「紙の上の図形」に対応づけて表したものが「地図(map)」であるので、地図と同様のものと考えることができる。
		また、関数は<dfn>函数</dfn>とも書き、入力に対して何らかの値を出力する「函(はこ)」だと考えることもできる。</p>
		<p><m>f: A \to B</m>は、<m>A</m>のすべての要素に対して対応する<m>B</m>の要素が一つだけ存在する。
		<m>a (\in A)</m>に対応する<m>B</m>の要素がなかったり、複数の要素が対応したりすることはできない。
		ただし、<m>B</m>の要素のうち、<m>A</m>の要素に対応しないものはあってもよい。</p>
		<example>
			<title>関数の例1</title>
			<statement>
				果物の集合<m>\text{Fruits} = \{\text{みかん}, \text{りんご}, \text{ぶどう}, \cdots\}</m>を考え、果物<m>x (\in \text{Fluits})</m>の店頭価格を<m>\text{price}(x)</m>で表すとする。
				例えば、<m>\text{price}(\text{みかん})=80, \text{price}(\text{りんご})=90, \text{price}(\text{ぶどう})=300</m>のようになる。
				<m>\text{price}</m>は果物の集合に対して自然数を一つ対応させているので写像であり、<m>\text{price}: \text{Fruits} \to \mathbb{N}</m>と表せる。
			</statement>
		</example>

		<p>関数を具体的に式の形で表せる場合は、入力を<m>x</m>などの変数で表して、入力<m>x</m>を与えたときの出力を式で書くことが多い。
		このとき、定義域を<m>x \in \mathbb{R}</m>や<m>0 \leqq x \leqq 1</m>のように、入力<m>x</m>を用いて表すことがある。
		なお、「実数の全体(<m>\mathbb{R}</m>)」のように「考えうるすべての値」が定義域である場合は、定義域の表記を省略することも多い。</p>
		<example>
			<title>関数の例2</title>
			<statement>
				<ul>
					<li><m>f(x) = 2x (x \in \mathbb{R})</m>は関数で、定義域は<m>\mathbb{R}</m>、値域は<m>\mathbb{R}</m>である。</li>
					<li><m>f(x) = x + 1 (0 \leqq x \leqq 1)</m>は関数で、定義域は<m>0 \leq x \leq 1</m>、値域は<m>1 \leq x \leq 2</m>である。<m>f</m>は<m>x = 0</m>で最小となり最小値は1、<m>x = 1</m>で最大となり最大値は2である。</li>
					<li><m>f(x)=\pm x (x \in \mathbb{R})</m>は、<m>x = 0</m>の場合を除いて<m>x</m>に対応する値が<m>x</m>と<m>-x</m>の二つ存在するので、関数ではない。</li>
				</ul>
			</statement>
		</example>

		<p>関数<m>f</m>に入力<m>x</m>を与えたときの出力を<m>y</m>とするとき、<m>y = f(x)</m>という方程式が成り立つ。この方程式<m>y = f(x)</m>を「関数<m>y = f(x)</m>」と呼ぶことがある。
		また、関数に名前をつけず、入力が<m>x</m>であるという前提で<m>y = x^2 + 2x + 1</m>のように書いて、これを「関数<m>y = x^2 + 2x + 1</m>」と呼ぶこともある。
		これらの方程式の場合、関数はあくまで方程式の右辺側の式を指すのであるのが本来であり、方程式を「関数」と呼ぶのは適切な呼び方ではない。
		だが、このような表記は一般的によく使われるので、注意が必要である。</p>
	</section>

	<section xml:id="sec-func-graph">
		<title>グラフ</title>
		<p>関数のグラフを座標空間に図示すると、関数の値の変化を目で見て分かるように可視化できる。</p>
		<definition>
			<title>グラフ</title>
			<statement>
				関数<m>f: \mathbb{R} \to \mathbb{R}</m>について、集合<m>\{ (x, y) | x \in \mathbb{R}, y = f(x) \}</m>を<m>f</m>の<dfn en="graph">グラフ</dfn>という。
				また、関数<m>f: \mathbb{R}^2 \to \mathbb{R}</m>について、集合<m>\{ (x, y, z) | x, y \in \mathbb{R}, z = f(x, y) \}</m>を<m>f</m>のグラフという。
				このとき、<m>y = f(x)</m>や<m>z = f(x, y)</m>をそれぞれのグラフの方程式という。
			</statement>
		</definition>

		<algorithm>
			<title>グラフの描き方</title>
			<statement>
				<ol>
					<li>軸と原点を描く。<m>xy</m>平面の場合は<m>x</m>軸と<m>y</m>軸を書き、それぞれの軸の端に「<m>x</m>」「<m>y</m>」と記す。<m>x</m>軸と<m>y</m>軸の交点に原点を表す記号<m>O</m>を記す。</li>
					<li>軸との交点を探し、もし交点があれば交点の座標を書き込む。<m>xy</m>平面の場合は<m>y = 0</m>を代入して<m>x</m>軸との交点を求め、<m>x = 0</m>を代入して<m>y</m>軸との交点を求める。</li>
					<li><m>x = \pm 1, \pm 2, \pm \frac{1}{2}</m>などいくつかの値を代入して、グラフの概形を推測する。</li>
					<li>以上の点を通る線を描く。線上で条件を満たす端点は白丸「○」で、条件を満たさない端点は黒丸「●」で表す。
						曲線を描く場合は、「曲がり方が急になる・緩やかになる」「ある値へ近づく」など、どのような曲がり方をしているかを意識し、できるだけ曲線の特徴を反映させて描く。</li>
				</ol>
			</statement>
		</algorithm>
	</section>

	<section xml:id="sec-func-poly">
		<title>多項式関数</title>
		<p>関数のうち最も単純なものは、多項式で表される多項式関数である。</p>
		<definition>
			<title>多項式関数</title>
			<statement>
				多項式で表される関数を<dfn en="polynomial function">多項式関数</dfn>という。
				特に、多項式の次数が<m>n (\in \mathbb{N})</m>であるとき、この関数を<dfn>n次関数</dfn>という。
			</statement>
		</definition>
		<p>0次関数は<m>f(x) = 3</m>のように、入力<m>x</m>に依らず同じ値を出力する。そのため、0次関数を<dfn en="constant function">定数関数</dfn>ともいう。</p>

		<section xml:id="ssec-func-linear">
			<title>1次関数</title>
			<definition>
				<title>1次関数</title>
				<statement>
					1次式で表される関数を<dfn en="linear function">1次関数</dfn>といい、一般に<m>f(x) = ax + b (a, b \in \mathbb{R}, a \ne 0)</m>と表される。
					<m>a</m>をこの1次関数の<dfn en="slope">傾き</dfn>、<m>b</m>をこの1次関数の<dfn en="intercept">切片</dfn>という。
				</statement>
			</definition>

			<p>左辺が1次関数である<m>y = ax + b</m>のグラフは図<xref ref="fig-func-linear-graph"/>のように<dfn en="line">直線</dfn>となり、傾き<m>a</m>の値によって<m>x</m>軸となす角度が変化する。</p>
			<figure xml:id="fig-func-linear-graph">
				<image source="image/func-linear-graph"/>
				<caption>1次関数のグラフ(直線)</caption>
			</figure>
		</section>

		<section xml:id="ssec-func-quad">
			<title>2次関数</title>
			<definition>
				<title>2次関数</title>
				<statement>
					2次式で表される関数を<dfn en="quadratic function">2次関数</dfn>という。
					すべての二次関数は、次のようにいくつかの形で表せる(<m>a, b, c, p, q, \beta, \gamma \in \mathbb{R}, a \ne 0</m>)。
					<md>
						<mrow>f(x) &amp;= a(x-p)^2 + q         &amp; (a \ne 0) &amp; (\text{標準形})</mrow>
						<mrow>f(x) &amp;= ax^2 + bx + c        &amp; (a \ne 0) &amp; (\text{一般形})</mrow>
						<mrow>f(x) &amp;= a(x-\beta)(x-\gamma) &amp; (a \ne 0) &amp; (\text{因数分解形})</mrow>
					</md>		
				</statement>
			</definition>

			<p>左辺が標準形の2次関数である<m>y = a(x - p)^2 + q</m>のグラフは、図<xref ref="fig-func-quad-graph"/>のようになる。
			この曲線は、物体を上方に投げたときに物体が描く軌道を表せることから<dfn en="parabola">放物線</dfn>という。
			点<m>(p, q)</m>をこの2次関数の<dfn>頂点</dfn>、直線<m>x = p</m>をこの2次関数の<dfn en="axis">軸</dfn>といい、放物線は軸について線対称となる。
			また、<m>a &gt; 0</m>のときは下側に突き出た形なので<dfn en="convex">下に凸</dfn>な放物線、<m>a &lt; 0</m>のときは上側に突き出た形なので<dfn en="concave">上に凸</dfn>な放物線という。</p>
			<figure xml:id="fig-func-quad-graph">
				<image source="image/func-quad-graph"/>
				<caption>2次関数のグラフ(放物線)</caption>
			</figure>

			<p>2次関数の標準形・一般形・因数分解形の特徴や用途を図<xref ref="fig-func-quad-form"/>に示す。
			通常は頂点や最大値・最小値が分かる標準形に変形すると便利なことが多いが、標準形・一般形・因数分解形にはそれぞれ便利な場面があるので、用途に応じて使い分ける必要がある。</p>
			<figure xml:id="fig-func-quad-form">
				<image source="image/func-quad-form"/>
				<caption>2次関数の標準形・一般形・因数分解形の比較</caption>
			</figure>
	
			<p>2次関数の形状に関する情報を得るためには、2次関数を標準形で表す必要がある。
			そのために、一般形<m>f(x) = ax^2 + bx + c</m>で表された2次関数を標準形<m>f(x) = a(x-p)^2 + q</m>に変換する、<dfn en="completing the square">平方完成</dfn>という操作を行う。</p>
			<theorem>
				<title>一般形2次関数の頂点と軸</title>
				<statement>
					一般形の2次関数<m>f(x) = ax^2 + bx + c</m>の頂点は点<m>(-\frac{b}{2a}, - \frac{b^2 - 4ac}{4a})</m>、軸は<m>x = -\frac{b}{2a}</m>である。
				</statement>
				<proof>
					<md>
						<mrow>f(x) = ax^2 + bx + c = a(x^2 + \frac{b}{a}x) + c = a(x^2 + \frac{b}{a}x + (\frac{b}{2a})^2) + c - a(\frac{b}{2a})^2 = a(x + \frac{b}{2a})^2 - \frac{b^2 - 4ac}{4a}</mrow>
					</md>
				</proof>
			</theorem>

			<p>具体的な平方完成の手順は、次のようになる。</p>
			<algorithm>
				<title>平方完成</title>
				<statement>
					一般形の2次関数<m>f(x) = ax^2 + bx + c</m>を標準形へと変換するには、次のようにすればよい。
					<ol>
						<li>2次の項と1次の項を<m>a</m>で括り出す。</li>
						<li>括り出した中で、<m>x</m>の係数を2で割り、2乗した数を加える。</li>
						<li>加えた数と釣り合いをとるために、加えた数に<m>a</m>を掛けた数を全体から引く。</li>
						<li>因数分解の公式を用いて<m>(x - p)^2</m>の形の項を作る。</li>
					</ol>
				</statement>
			</algorithm>
			<p>平方完成の例を次に示す。計算が正しいか不安であれば、右から左へ展開して検算するとよい。</p>
			<example>
				<title>平方完成の例</title>
				<statement>
					2次関数<m>f(x) = 4x^2 + 6x + 3</m>を標準形へ変換する。
					<md>
						<mrow>f(x) = 4x^2+6x+3 = 4(x^2 + \frac{3}{2}x) + 3 = 4(x^2 + \frac{3}{2}x + (\frac{3}{4})^2) + 3 - 4(\frac{3}{4})^2 = 4(x + \frac{3}{4})^2 + \frac{3}{4}</mrow>
					</md>
					より、<m>f(x)</m>の頂点は点<m>(-\frac{3}{4}, \frac{3}{4})</m>、軸は直線<m>x = -\frac{3}{4}</m>となり、グラフは図<xref ref="fig-func-quad-graph-ex"/>のようになる。
					<figure xml:id="fig-func-quad-graph-ex">
						<image source="image/func-quad-graph-ex"/>
						<caption><m>y = 4x^2 + 6x + 3</m>のグラフ</caption>
					</figure>
				</statement>
			</example>
		</section>
	</section>
</chapter>
